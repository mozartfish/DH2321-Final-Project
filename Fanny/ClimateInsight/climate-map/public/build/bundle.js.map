{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/version.js","../../node_modules/svelte/src/internal/disclose-version.js","../../node_modules/svelte/src/internal/flags/index.js","../../node_modules/svelte/src/internal/flags/legacy.js","../../node_modules/svelte/src/constants.js","../../node_modules/esm-env/dev-fallback.js","../../node_modules/svelte/src/internal/client/constants.js","../../node_modules/svelte/src/internal/shared/utils.js","../../node_modules/svelte/src/internal/client/reactivity/equality.js","../../node_modules/svelte/src/internal/client/errors.js","../../node_modules/svelte/src/internal/client/dev/tracing.js","../../node_modules/svelte/src/internal/client/reactivity/sources.js","../../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../node_modules/svelte/src/internal/client/warnings.js","../../node_modules/svelte/src/internal/client/proxy.js","../../node_modules/svelte/src/internal/client/dom/operations.js","../../node_modules/svelte/src/internal/client/runtime.js","../../node_modules/svelte/src/internal/client/reactivity/effects.js","../../node_modules/svelte/src/internal/client/dev/ownership.js","../../node_modules/svelte/src/internal/client/context.js","../../node_modules/svelte/src/internal/client/dev/elements.js","../../node_modules/svelte/src/internal/client/dom/reconciler.js","../../node_modules/svelte/src/internal/client/dom/template.js","../../node_modules/svelte/src/internal/client/render.js","../../node_modules/svelte/src/internal/client/dev/legacy.js","../../node_modules/svelte/src/index-client.js","../../node_modules/svelte/src/internal/client/reactivity/store.js","../../node_modules/svelte/src/internal/client/reactivity/props.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.20.2';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","import { enable_legacy_mode_flag } from './index.js';\n\nenable_legacy_mode_flag();\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","const node_env = globalThis.process?.env?.NODE_ENV;\nexport default node_env && !node_env.toLowerCase().startsWith('prod');\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state\\nhttps://svelte.dev/e/state_unsafe_local_read`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_local_read`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","/** @import { Derived, Reaction, Signal, Value } from '#client' */\nimport { UNINITIALIZED } from '../../../constants.js';\nimport { snapshot } from '../../shared/clone.js';\nimport { define_property } from '../../shared/utils.js';\nimport { DERIVED, STATE_SYMBOL } from '../constants.js';\nimport { effect_tracking } from '../reactivity/effects.js';\nimport { active_reaction, captured_signals, set_captured_signals, untrack } from '../runtime.js';\n\n/** @type { any } */\nexport let tracing_expressions = null;\n\n/**\n * @param { Value } signal\n * @param { { read: Error[] } } [entry]\n */\nfunction log_entry(signal, entry) {\n\tconst debug = signal.debug;\n\tconst value = signal.trace_need_increase ? signal.trace_v : signal.v;\n\n\tif (value === UNINITIALIZED) {\n\t\treturn;\n\t}\n\n\tif (debug) {\n\t\tvar previous_captured_signals = captured_signals;\n\t\tvar captured = new Set();\n\t\tset_captured_signals(captured);\n\t\ttry {\n\t\t\tuntrack(() => {\n\t\t\t\tdebug();\n\t\t\t});\n\t\t} finally {\n\t\t\tset_captured_signals(previous_captured_signals);\n\t\t}\n\t\tif (captured.size > 0) {\n\t\t\tfor (const dep of captured) {\n\t\t\t\tlog_entry(dep);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst type = (signal.f & DERIVED) !== 0 ? '$derived' : '$state';\n\tconst current_reaction = /** @type {Reaction} */ (active_reaction);\n\tconst dirty = signal.wv > current_reaction.wv || current_reaction.wv === 0;\n\n\t// eslint-disable-next-line no-console\n\tconsole.groupCollapsed(\n\t\t`%c${type}`,\n\t\tdirty ? 'color: CornflowerBlue; font-weight: bold' : 'color: grey; font-weight: bold',\n\t\ttypeof value === 'object' && value !== null && STATE_SYMBOL in value\n\t\t\t? snapshot(value, true)\n\t\t\t: value\n\t);\n\n\tif (type === '$derived') {\n\t\tconst deps = new Set(/** @type {Derived} */ (signal).deps);\n\t\tfor (const dep of deps) {\n\t\t\tlog_entry(dep);\n\t\t}\n\t}\n\n\tif (signal.created) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(signal.created);\n\t}\n\n\tif (signal.updated) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(signal.updated);\n\t}\n\n\tconst read = entry?.read;\n\n\tif (read && read.length > 0) {\n\t\tfor (var stack of read) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(stack);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-console\n\tconsole.groupEnd();\n}\n\n/**\n * @template T\n * @param {() => string} label\n * @param {() => T} fn\n */\nexport function trace(label, fn) {\n\tvar previously_tracing_expressions = tracing_expressions;\n\ttry {\n\t\ttracing_expressions = { entries: new Map(), reaction: active_reaction };\n\n\t\tvar start = performance.now();\n\t\tvar value = fn();\n\t\tvar time = (performance.now() - start).toFixed(2);\n\n\t\tif (!effect_tracking()) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(`${label()} %cran outside of an effect (${time}ms)`, 'color: grey');\n\t\t} else if (tracing_expressions.entries.size === 0) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(`${label()} %cno reactive dependencies (${time}ms)`, 'color: grey');\n\t\t} else {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.group(`${label()} %c(${time}ms)`, 'color: grey');\n\n\t\t\tvar entries = tracing_expressions.entries;\n\n\t\t\ttracing_expressions = null;\n\n\t\t\tfor (const [signal, entry] of entries) {\n\t\t\t\tlog_entry(signal, entry);\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.groupEnd();\n\t\t}\n\n\t\tif (previously_tracing_expressions !== null && tracing_expressions !== null) {\n\t\t\tfor (const [signal, entry] of tracing_expressions.entries) {\n\t\t\t\tvar prev_entry = previously_tracing_expressions.get(signal);\n\n\t\t\t\tif (prev_entry === undefined) {\n\t\t\t\t\tpreviously_tracing_expressions.set(signal, entry);\n\t\t\t\t} else {\n\t\t\t\t\tprev_entry.read.push(...entry.read);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} finally {\n\t\ttracing_expressions = previously_tracing_expressions;\n\t}\n}\n\n/**\n * @param {string} label\n */\nexport function get_stack(label) {\n\tlet error = Error();\n\tconst stack = error.stack;\n\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = ['\\n'];\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\n\t\t\tif (line === 'Error') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (line.includes('validate_each_keys')) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\n\t\tif (new_lines.length === 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\n\t\tdefine_property(error, 'name', {\n\t\t\t// 'Error' suffix is required for stack traces to be rendered properly\n\t\t\tvalue: `${label}Error`\n\t\t});\n\t}\n\treturn error;\n}\n","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tset_is_flushing_effect,\n\tis_flushing_effect,\n\tuntracking\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\n\nexport let inspect_effects = new Set();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && !untracking && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\t\tsource.v = value;\n\t\tsource.wv = increment_write_version();\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\t\t\tvar previously_flushing_effect = is_flushing_effect;\n\t\t\tset_is_flushing_effect(true);\n\t\t\ttry {\n\t\t\t\tfor (const effect of inspects) {\n\t\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t\t}\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t\t}\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DIRTY, EFFECT_HAS_DERIVED, MAYBE_DIRTY, UNOWNED } from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * Assignment to `%property%` property (%location%) will evaluate to the right-hand side, not the value of `%property%` following the assignment. This may result in unexpected behaviour.\n * @param {string} property\n * @param {string} location\n */\nexport function assignment_value_stale(property, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] assignment_value_stale\\n%cAssignment to \\`${property}\\` property (${location}) will evaluate to the right-hand side, not the value of \\`${property}\\` following the assignment. This may result in unexpected behaviour.\\nhttps://svelte.dev/e/assignment_value_stale`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/assignment_value_stale`);\n\t}\n}\n\n/**\n * `%binding%` (%location%) is binding to a non-reactive property\n * @param {string} binding\n * @param {string | undefined | null} [location]\n */\nexport function binding_property_non_reactive(binding, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] binding_property_non_reactive\\n%c${location ? `\\`${binding}\\` (${location}) is binding to a non-reactive property` : `\\`${binding}\\` is binding to a non-reactive property`}\\nhttps://svelte.dev/e/binding_property_non_reactive`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/binding_property_non_reactive`);\n\t}\n}\n\n/**\n * Your `console.%method%` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` instead\n * @param {string} method\n */\nexport function console_log_state(method) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] console_log_state\\n%cYour \\`console.${method}\\` contained \\`$state\\` proxies. Consider using \\`$inspect(...)\\` or \\`$state.snapshot(...)\\` instead\\nhttps://svelte.dev/e/console_log_state`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/console_log_state`);\n\t}\n}\n\n/**\n * %handler% should be a function. Did you mean to %suggestion%?\n * @param {string} handler\n * @param {string} suggestion\n */\nexport function event_handler_invalid(handler, suggestion) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] event_handler_invalid\\n%c${handler} should be a function. Did you mean to ${suggestion}?\\nhttps://svelte.dev/e/event_handler_invalid`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/event_handler_invalid`);\n\t}\n}\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value\\nhttps://svelte.dev/e/hydration_attribute_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_attribute_changed`);\n\t}\n}\n\n/**\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\n * @param {string | undefined | null} [location]\n */\nexport function hydration_html_changed(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : 'The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value'}\\nhttps://svelte.dev/e/hydration_html_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_html_changed`);\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\n * @param {string | undefined | null} [location]\n */\nexport function hydration_mismatch(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : 'Hydration failed because the initial UI does not match what was rendered on the server'}\\nhttps://svelte.dev/e/hydration_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_mismatch`);\n\t}\n}\n\n/**\n * The `render` function passed to `createRawSnippet` should return HTML for a single element\n */\nexport function invalid_raw_snippet_render() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] invalid_raw_snippet_render\\n%cThe \\`render\\` function passed to \\`createRawSnippet\\` should return HTML for a single element\\nhttps://svelte.dev/e/invalid_raw_snippet_render`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/invalid_raw_snippet_render`);\n\t}\n}\n\n/**\n * Detected a migrated `$:` reactive block in `%filename%` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an `$effect`.\n * @param {string} filename\n */\nexport function legacy_recursive_reactive_block(filename) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] legacy_recursive_reactive_block\\n%cDetected a migrated \\`$:\\` reactive block in \\`${filename}\\` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an \\`$effect\\`.\\nhttps://svelte.dev/e/legacy_recursive_reactive_block`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/legacy_recursive_reactive_block`);\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted\\nhttps://svelte.dev/e/lifecycle_double_unmount`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/lifecycle_double_unmount`);\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}\\nhttps://svelte.dev/e/ownership_invalid_binding`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_binding`);\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : 'Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead'}\\nhttps://svelte.dev/e/ownership_invalid_mutation`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_mutation`);\n\t}\n}\n\n/**\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results\n * @param {string} operator\n */\nexport function state_proxy_equality_mismatch(operator) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results\\nhttps://svelte.dev/e/state_proxy_equality_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/state_proxy_equality_mismatch`);\n\t}\n}\n\n/**\n * The `slide` transition does not work correctly for elements with `display: %value%`\n * @param {string} value\n */\nexport function transition_slide_display(value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] transition_slide_display\\n%cThe \\`slide\\` transition does not work correctly for elements with \\`display: ${value}\\`\\nhttps://svelte.dev/e/transition_slide_display`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/transition_slide_display`);\n\t}\n}","/** @import { ProxyMetadata, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect } from './runtime.js';\nimport { component_context } from './context.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {ProxyMetadata | null} [parent]\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, parent = null, prev) {\n\t/** @type {Error | null} */\n\tvar stack = null;\n\tif (DEV && tracing_mode_flag) {\n\t\tstack = get_stack('CreatedAt');\n\t}\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = source(descriptor.value, stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(s, proxy(descriptor.value, metadata));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(prop, source(UNINITIALIZED, stack));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = source(proxy(exists ? target[prop] : UNINITIALIZED, metadata), stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED, stack);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = source(UNINITIALIZED, stack);\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = source(undefined, stack);\n\t\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\treturn value[STATE_SYMBOL];\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__styles = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set } from './reactivity/sources.js';\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\nimport { is_firefox } from './dom/operations.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nexport let is_throwing_error = false;\n\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = is_firefox ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 &&\n\t\t(!is_flushing_effect || previous_reaction === null || previous_untracking);\n\n\tderived_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null) {\n\t\t\tread_version++;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\ttry {\n\t\t\te.effect_update_depth_exceeded();\n\t\t} catch (error) {\n\t\t\tif (DEV) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t\t// if there's an effect available from when it was last scheduled\n\t\t\tif (last_scheduled_effect !== null) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\tvar collected_effects = process_effects(effect);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tlast_scheduled_effect = signal;\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @returns {Effect[]}\n */\nfunction process_effects(effect) {\n\t/** @type {Effect[]} */\n\tvar effects = [];\n\n\tvar current_effect = effect.first;\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\t\tvar sibling = current_effect.next;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t} else if (is_branch) {\n\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t} else {\n\t\t\t\t// Ensure we set the effect to be the active reaction\n\t\t\t\t// to ensure that unowned deriveds are correctly tracked\n\t\t\t\t// because we're flushing the current effect\n\t\t\t\tvar previous_active_reaction = active_reaction;\n\t\t\t\ttry {\n\t\t\t\t\tactive_reaction = current_effect;\n\t\t\t\t\tif (check_dirtiness(current_effect)) {\n\t\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandle_error(error, current_effect, null, current_effect.ctx);\n\t\t\t\t} finally {\n\t\t\t\t\tactive_reaction = previous_active_reaction;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar child = current_effect.first;\n\n\t\t\tif (child !== null) {\n\t\t\t\tcurrent_effect = child;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\treturn effects;\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\t\tif (signal.rv < read_version) {\n\t\t\tsignal.rv = read_version;\n\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\tskipped_deps++;\n\t\t\t} else if (new_deps === null) {\n\t\t\t\tnew_deps = [signal];\n\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t// we don't have duplicates\n\t\t\t\tnew_deps.push(signal);\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nexport function capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack,\n\tskip_reaction,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { ProxyMetadata } from '#client' */\n/** @typedef {{ file: string, line: number, column: number }} Location */\n\nimport { STATE_SYMBOL_METADATA } from '../constants.js';\nimport { render_effect, user_pre_effect } from '../reactivity/effects.js';\nimport { dev_current_component_function } from '../context.js';\nimport { get_prototype_of } from '../../shared/utils.js';\nimport * as w from '../warnings.js';\nimport { FILENAME, UNINITIALIZED } from '../../../constants.js';\n\n/** @type {Record<string, Array<{ start: Location, end: Location, component: Function }>>} */\nconst boundaries = {};\n\nconst chrome_pattern = /at (?:.+ \\()?(.+):(\\d+):(\\d+)\\)?$/;\nconst firefox_pattern = /@(.+):(\\d+):(\\d+)$/;\n\nfunction get_stack() {\n\tconst stack = new Error().stack;\n\tif (!stack) return null;\n\n\tconst entries = [];\n\n\tfor (const line of stack.split('\\n')) {\n\t\tlet match = chrome_pattern.exec(line) ?? firefox_pattern.exec(line);\n\n\t\tif (match) {\n\t\t\tentries.push({\n\t\t\t\tfile: match[1],\n\t\t\t\tline: +match[2],\n\t\t\t\tcolumn: +match[3]\n\t\t\t});\n\t\t}\n\t}\n\n\treturn entries;\n}\n\n/**\n * Determines which `.svelte` component is responsible for a given state change\n * @returns {Function | null}\n */\nexport function get_component() {\n\t// first 4 lines are svelte internals; adjust this number if we change the internal call stack\n\tconst stack = get_stack()?.slice(4);\n\tif (!stack) return null;\n\n\tfor (let i = 0; i < stack.length; i++) {\n\t\tconst entry = stack[i];\n\t\tconst modules = boundaries[entry.file];\n\t\tif (!modules) {\n\t\t\t// If the first entry is not a component, that means the modification very likely happened\n\t\t\t// within a .svelte.js file, possibly triggered by a component. Since these files are not part\n\t\t\t// of the bondaries/component context heuristic, we need to bail in this case, else we would\n\t\t\t// have false positives when the .svelte.ts file provides a state creator function, encapsulating\n\t\t\t// the state and its mutations, and is being called from a component other than the one who\n\t\t\t// called the state creator function.\n\t\t\tif (i === 0) return null;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const module of modules) {\n\t\t\tif (module.end == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (module.start.line < entry.line && module.end.line > entry.line) {\n\t\t\t\treturn module.component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport const ADD_OWNER = Symbol('ADD_OWNER');\n\n/**\n * Together with `mark_module_end`, this function establishes the boundaries of a `.svelte` file,\n * such that subsequent calls to `get_component` can tell us which component is responsible\n * for a given state change\n */\nexport function mark_module_start() {\n\tconst start = get_stack()?.[2];\n\n\tif (start) {\n\t\t(boundaries[start.file] ??= []).push({\n\t\t\tstart,\n\t\t\t// @ts-expect-error\n\t\t\tend: null,\n\t\t\t// @ts-expect-error we add the component at the end, since HMR will overwrite the function\n\t\t\tcomponent: null\n\t\t});\n\t}\n}\n\n/**\n * @param {Function} component\n */\nexport function mark_module_end(component) {\n\tconst end = get_stack()?.[2];\n\n\tif (end) {\n\t\tconst boundaries_file = boundaries[end.file];\n\t\tconst boundary = boundaries_file[boundaries_file.length - 1];\n\n\t\tboundary.end = end;\n\t\tboundary.component = component;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {any | null} owner\n * @param {boolean} [global]\n * @param {boolean} [skip_warning]\n */\nexport function add_owner(object, owner, global = false, skip_warning = false) {\n\tif (object && !global) {\n\t\tconst component = dev_current_component_function;\n\t\tconst metadata = object[STATE_SYMBOL_METADATA];\n\t\tif (metadata && !has_owner(metadata, component)) {\n\t\t\tlet original = get_owner(metadata);\n\n\t\t\tif (owner && owner[FILENAME] !== component[FILENAME] && !skip_warning) {\n\t\t\t\tw.ownership_invalid_binding(component[FILENAME], owner[FILENAME], original[FILENAME]);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_owner_to_object(object, owner, new Set());\n}\n\n/**\n * @param {() => unknown} get_object\n * @param {any} Component\n * @param {boolean} [skip_warning]\n */\nexport function add_owner_effect(get_object, Component, skip_warning = false) {\n\tuser_pre_effect(() => {\n\t\tadd_owner(get_object(), Component, false, skip_warning);\n\t});\n}\n\n/**\n * @param {any} _this\n * @param {Function} owner\n * @param {Array<() => any>} getters\n * @param {boolean} skip_warning\n */\nexport function add_owner_to_class(_this, owner, getters, skip_warning) {\n\t_this[ADD_OWNER].current ||= getters.map(() => UNINITIALIZED);\n\n\tfor (let i = 0; i < getters.length; i += 1) {\n\t\tconst current = getters[i]();\n\t\t// For performance reasons we only re-add the owner if the state has changed\n\t\tif (current !== _this[ADD_OWNER][i]) {\n\t\t\t_this[ADD_OWNER].current[i] = current;\n\t\t\tadd_owner(current, owner, false, skip_warning);\n\t\t}\n\t}\n}\n\n/**\n * @param {ProxyMetadata | null} from\n * @param {ProxyMetadata} to\n */\nexport function widen_ownership(from, to) {\n\tif (to.owners === null) {\n\t\treturn;\n\t}\n\n\twhile (from) {\n\t\tif (from.owners === null) {\n\t\t\tto.owners = null;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (const owner of from.owners) {\n\t\t\tto.owners.add(owner);\n\t\t}\n\n\t\tfrom = from.parent;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {Function | null} owner If `null`, then the object is globally owned and will not be checked\n * @param {Set<any>} seen\n */\nfunction add_owner_to_object(object, owner, seen) {\n\tconst metadata = /** @type {ProxyMetadata} */ (object?.[STATE_SYMBOL_METADATA]);\n\n\tif (metadata) {\n\t\t// this is a state proxy, add owner directly, if not globally shared\n\t\tif ('owners' in metadata && metadata.owners != null) {\n\t\t\tif (owner) {\n\t\t\t\tmetadata.owners.add(owner);\n\t\t\t} else {\n\t\t\t\tmetadata.owners = null;\n\t\t\t}\n\t\t}\n\t} else if (object && typeof object === 'object') {\n\t\tif (seen.has(object)) return;\n\t\tseen.add(object);\n\t\tif (ADD_OWNER in object && object[ADD_OWNER]) {\n\t\t\t// this is a class with state fields. we put this in a render effect\n\t\t\t// so that if state is replaced (e.g. `instance.name = { first, last }`)\n\t\t\t// the new state is also co-owned by the caller of `getContext`\n\t\t\trender_effect(() => {\n\t\t\t\tobject[ADD_OWNER](owner);\n\t\t\t});\n\t\t} else {\n\t\t\tvar proto = get_prototype_of(object);\n\n\t\t\tif (proto === Object.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (const key in object) {\n\t\t\t\t\tif (Object.getOwnPropertyDescriptor(object, key)?.get) {\n\t\t\t\t\t\t// Similar to the class case; the getter could update with a new state\n\t\t\t\t\t\tlet current = UNINITIALIZED;\n\t\t\t\t\t\trender_effect(() => {\n\t\t\t\t\t\t\tconst next = object[key];\n\t\t\t\t\t\t\tif (current !== next) {\n\t\t\t\t\t\t\t\tcurrent = next;\n\t\t\t\t\t\t\t\tadd_owner_to_object(next, owner, seen);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadd_owner_to_object(object[key], owner, seen);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (proto === Array.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (let i = 0; i < object.length; i += 1) {\n\t\t\t\t\tadd_owner_to_object(object[i], owner, seen);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @param {Function} component\n * @returns {boolean}\n */\nfunction has_owner(metadata, component) {\n\tif (metadata.owners === null) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\tmetadata.owners.has(component) ||\n\t\t// This helps avoid false positives when using HMR, where the component function is replaced\n\t\t(FILENAME in component &&\n\t\t\t[...metadata.owners].some(\n\t\t\t\t(owner) => /** @type {any} */ (owner)[FILENAME] === component[FILENAME]\n\t\t\t)) ||\n\t\t(metadata.parent !== null && has_owner(metadata.parent, component))\n\t);\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @returns {any}\n */\nfunction get_owner(metadata) {\n\treturn (\n\t\tmetadata?.owners?.values().next().value ??\n\t\tget_owner(/** @type {ProxyMetadata} */ (metadata.parent))\n\t);\n}\n\nlet skip = false;\n\n/**\n * @param {() => any} fn\n */\nexport function skip_ownership_validation(fn) {\n\tskip = true;\n\tfn();\n\tskip = false;\n}\n\n/**\n * @param {ProxyMetadata} metadata\n */\nexport function check_ownership(metadata) {\n\tif (skip) return;\n\n\tconst component = get_component();\n\n\tif (component && !has_owner(metadata, component)) {\n\t\tlet original = get_owner(metadata);\n\n\t\t// @ts-expect-error\n\t\tif (original[FILENAME] !== component[FILENAME]) {\n\t\t\t// @ts-expect-error\n\t\t\tw.ownership_invalid_mutation(component[FILENAME], original[FILENAME]);\n\t\t} else {\n\t\t\tw.ownership_invalid_mutation();\n\t\t}\n\t}\n}\n","/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { add_owner } from './dev/ownership.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from './runtime.js';\nimport { effect } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\n\tif (DEV) {\n\t\t// When state is put into context, we treat as if it's global from now on.\n\t\t// We do for performance reasons (it's for example very expensive to call\n\t\t// getContext on a big object many times when part of a list component)\n\t\t// and danger of false positives.\n\t\tuntrack(() => add_owner(context, null, true));\n\t}\n\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","/** @import { SourceLocation } from '#shared' */\nimport { HYDRATION_END, HYDRATION_START, HYDRATION_START_ELSE } from '../../../constants.js';\nimport { hydrating } from '../dom/hydration.js';\n\n/**\n * @param {any} fn\n * @param {string} filename\n * @param {SourceLocation[]} locations\n * @returns {any}\n */\nexport function add_locations(fn, filename, locations) {\n\treturn (/** @type {any[]} */ ...args) => {\n\t\tconst dom = fn(...args);\n\n\t\tvar node = hydrating ? dom : dom.nodeType === 11 ? dom.firstChild : dom;\n\t\tassign_locations(node, filename, locations);\n\n\t\treturn dom;\n\t};\n}\n\n/**\n * @param {Element} element\n * @param {string} filename\n * @param {SourceLocation} location\n */\nfunction assign_location(element, filename, location) {\n\t// @ts-expect-error\n\telement.__svelte_meta = {\n\t\tloc: { file: filename, line: location[0], column: location[1] }\n\t};\n\n\tif (location[2]) {\n\t\tassign_locations(element.firstChild, filename, location[2]);\n\t}\n}\n\n/**\n * @param {Node | null} node\n * @param {string} filename\n * @param {SourceLocation[]} locations\n */\nfunction assign_locations(node, filename, locations) {\n\tvar i = 0;\n\tvar depth = 0;\n\n\twhile (node && i < locations.length) {\n\t\tif (hydrating && node.nodeType === 8) {\n\t\t\tvar comment = /** @type {Comment} */ (node);\n\t\t\tif (comment.data === HYDRATION_START || comment.data === HYDRATION_START_ELSE) depth += 1;\n\t\t\telse if (comment.data[0] === HYDRATION_END) depth -= 1;\n\t\t}\n\n\t\tif (depth === 0 && node.nodeType === 1) {\n\t\t\tassign_location(/** @type {Element} */ (node), filename, locations[i++]);\n\t\t}\n\n\t\tnode = node.nextSibling;\n\t}\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child, is_firefox } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\nlet uid = 1;\n\nexport function reset_props_id() {\n\tuid = 1;\n}\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === 8 &&\n\t\thydrate_node.textContent?.startsWith('#s')\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\treturn 'c' + uid++;\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","import * as e from '../errors.js';\nimport { component_context } from '../context.js';\nimport { FILENAME } from '../../../constants.js';\nimport { get_component } from './ownership.js';\n\n/** @param {Function & { [FILENAME]: string }} target */\nexport function check_target(target) {\n\tif (target) {\n\t\te.component_api_invalid_new(target[FILENAME] ?? 'a component', target.name);\n\t}\n}\n\nexport function legacy_api() {\n\tconst component = component_context?.function;\n\n\t/** @param {string} method */\n\tfunction error(method) {\n\t\t// @ts-expect-error\n\t\tconst parent = get_component()?.[FILENAME] ?? 'Something';\n\t\te.component_api_changed(parent, method, component[FILENAME]);\n\t}\n\n\treturn {\n\t\t$destroy: () => error('$destroy()'),\n\t\t$on: () => error('$on(...)'),\n\t\t$set: () => error('$set(...)')\n\t};\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { flush_sync, untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\nimport { component_context } from './internal/client/context.js';\nimport { DEV } from 'esm-env';\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside [server-side components](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\n/**\n * Synchronously flushes any pending state changes and those that result from it.\n * @param {() => void} [fn]\n * @returns {void}\n */\nexport function flushSync(fn) {\n\tflush_sync(fn);\n}\n\nexport { getContext, getAllContexts, hasContext, setContext } from './internal/client/context.js';\nexport { hydrate, mount, unmount } from './internal/client/render.js';\nexport { tick, untrack } from './internal/client/runtime.js';\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { get as get_store } from '../../../store/shared/index.js';\nimport { define_property, noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\nlet IS_UNMOUNTED = Symbol();\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\t// if the component that setup this is already unmounted we don't want to register a subscription\n\tif (entry.store !== store && !(IS_UNMOUNTED in stores)) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\t// if the component that setup this stores is already unmounted the source will be out of sync\n\t// so we just use the `get` for the stores, less performant but it avoids to create a memory leak\n\t// and it will keep the value consistent\n\tif (store && IS_UNMOUNTED in stores) {\n\t\treturn get_store(store);\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {[StoreReferencesContainer, ()=>void]}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tfunction cleanup() {\n\t\tteardown(() => {\n\t\t\tfor (var store_name in stores) {\n\t\t\t\tconst ref = stores[store_name];\n\t\t\t\tref.unsubscribe();\n\t\t\t}\n\t\t\tdefine_property(stores, IS_UNMOUNTED, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t});\n\t}\n\n\treturn [stores, cleanup];\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source, update } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport {\n\tactive_effect,\n\tget,\n\tcaptured_signals,\n\tset_active_effect,\n\tuntrack,\n\tactive_reaction,\n\tset_active_reaction\n} from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport {\n\tBRANCH_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tLEGACY_PROPS,\n\tROOT_EFFECT,\n\tSTATE_SYMBOL\n} from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = (immutable ? derived : derived_safe_equal)(\n\t\t\t() => /** @type {V} */ (props[key])\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = derived(() => {\n\t\tvar parent_value = getter();\n\t\tvar child_value = get(inner_current_value);\n\n\t\tif (from_child) {\n\t\t\tfrom_child = false;\n\t\t\twas_from_child = true;\n\t\t\treturn child_value;\n\t\t}\n\n\t\twas_from_child = false;\n\t\treturn (inner_current_value.v = parent_value);\n\t});\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t\treturn get(current_value);\n\t};\n}\n","<script>\n\texport let name;\n</script>\n\n<main>\n\t<h1>Hello {name}!</h1>\n\t<p>Visit the <a href=\"https://svelte.dev/tutorial\">Svelte tutorial</a> to learn how to build Svelte apps.</p>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["get_stack","e.state_unsafe_mutation","e.derived_references_self","e.state_descriptors_fixed","e.state_prototype_fixed","e.effect_update_depth_exceeded","e.state_unsafe_local_read","w.ownership_invalid_mutation","e.component_api_invalid_new","e.component_api_changed","e.rune_outside_svelte","e.props_invalid_value","$.prop"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]}